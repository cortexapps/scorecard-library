tag: code-quality-metrics
name: Code Quality
description: Ensuring high standards of code quality and maintainability
draft: false
notifications:
  enabled: true
  scoreDropNotificationsEnabled: false
exemptions:
  enabled: true
  autoApprove: false
ladder:
  name: Default Ladder
  levels:
  - name: Bronze
    rank: 1
    color: '#050505'
  - name: Silver
    rank: 2
    color: '#8f8f8f'
  - name: Gold
    rank: 3
    color: '#dbac00'
rules:
- title: High Code Coverage
  description: SonarQube or custom coverage is at least 90%
  expression: sonarqube.metric("coverage") >= 90
  weight: 1
  level: Bronze
  filter:
    kind: GENERIC
- title: Low Code Complexity
  description: "Ensure that code complexity metrics (e.g., cyclomatic complexity)\
    \ are within acceptable limits"
  expression: sonarqube.metric("complexity") < 4
  weight: 1
  level: Silver
  filter:
    kind: GENERIC
- title: High Test Coverage (Branch)
  description: Branch coverage should be at least 75%
  expression: "jq(custom(\"test.coverage\"), \".branch\") > 75"
  weight: 1
  level: Silver
  filter:
    kind: GENERIC
- title: Low Code Duplication
  description: SonarQube duplicated lines density is less than 10%
  expression: sonarqube.metric("duplicated_lines_density") < 10
  weight: 1
  level: Silver
  filter:
    kind: GENERIC
- title: High Test Coverage (Line)
  description: Line coverage should be at least 85%
  expression: "jq(custom(\"test.coverage\"), \".line\") > 85"
  weight: 1
  level: Silver
  filter:
    kind: GENERIC
- title: High Maintainability Rating
  description: SonarQube maintainability rating (SQALE rating) is at least A
  expression: sonarqube.metric("sqale_rating") >= 0.95
  weight: 1
  level: Gold
  filter:
    kind: GENERIC
- title: No Critical or High severity vulnerabilities
  description: Ensure no critical or high severity vulnerabilities exist in the codebase
  expression: "git.numOfVulnerabilities(severity=[\"CRITICAL\", \"HIGH\"]) == 0"
  weight: 1
  level: Bronze
  filter:
    kind: GENERIC
- title: Minimal Open Pull Requests
  description: Limit the number of open pull requests to ensure efficient code review
    and integration
  expression: git.pullRequests().filter((pr) => pr.status == "OPEN").length <= 5
  weight: 1
  level: Gold
  filter:
    kind: GENERIC
    types: {}
filter:
  kind: GENERIC
  types:
    include:
    - service